# template.yaml

# AWSTemplateFormatVersion: '2010-09-09'
# Transform: AWS::Serverless-2016-10-31

# Resources:
#   LambdaAFunction:
#     Type: AWS::Serverless::Function
#     Properties:
#       Handler: app.lambda_handler
#       Runtime: python3.9
#       CodeUri: LambdaA/
#       Events:
#         InvokeLambdaBEvent:
#           Type: Api
#           Properties:
#             Path: /invokeLambdaB
#             Method: post

#   LambdaBFunction:
#     Type: AWS::Serverless::Function
#     Properties:
#       Handler: app.lambda_handler
#       Runtime: python3.9
#       CodeUri: LambdaB/

AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Resources:
  IntegrationLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      CodeUri: .
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: !GetAtt PrintHelloWorldLambdaFunction.Arn 
      Events:
        IntegrationEvent:
          Type: Api
          Properties:
            Path: /integration
            Method: post

  PrintHelloWorldLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: hello_world.lambda_handler
      Runtime: python3.12
      CodeUri: .
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        HelloWorldGetEvent:
          Type: Api
          Properties:
            Path: /hello-world
            Method: get
